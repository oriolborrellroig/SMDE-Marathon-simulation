colName <- paste(k,"Parcial", sep = "-")
M1834[,colName] <- M1834[,k] - M1834[,temp]
#print(summary(M1834[,k]))
#print(sd(M1834[,k]))
}
else {
colName <- paste(k,"Parcial", sep = "-")
M1834[,colName] <- M1834[,k]
}
temp = k
}
#Pinting the summary and std of all columns in c
distance<-c("X5K-Parcial","X10K-Parcial","X15K-Parcial","X20K-Parcial","X25K-Parcial","X30K-Parcial","X35K-Parcial","X40K-Parcial","Official.Time-Parcial")
for (k in distance) {
print(k)
print(summary(M1834[,k]))
print(sd(M1834[,k]))
}
#Calculant la p
d <- sort(M1834$Official.Time)
i <- round(nrow(M1834)*0.1)
print(d[i+2])
TABLEV2 = as.data.frame((with(M1834,table(Age))))
print(TABLEV2[,"Freq"]/nrow(M1834))
#Calculant la p acumulada
TABLEV2$cumsum <- cumsum(TABLEV2[,"Freq"]/nrow(M1834))
#Printant el resultat per fer copypaste a gpss
cumsums <- t(TABLEV2$cumsum)
for (k in order(cumsums)) {
cat(cumsums[k],k+17, sep = ",")
cat("/")
}
lm()
RegModel  <- lm(Official.Time ~ Official.Time.Parcial + X5K.Parcial + X10K.Parcial +
X15K.Parcial + X20K.Parcial + X25K.Parcial + X30K.Parcial + X35K.Parcial + X40K.Parcial, data = M1834)
View(M1834)
######################################
#Importing the dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
M1834 <- read.csv("./marathon_results_2015.csv", header = TRUE, fill = TRUE, sep = ",", na.strings = "", dec = ".", strip.white = TRUE)
#Preprocessing
library(lubridate)
M1834$X5K <- lubridate::period_to_seconds(hms(M1834$X5K))
M1834$X10K <- lubridate::period_to_seconds(hms(M1834$X10K))
M1834$X15K <- lubridate::period_to_seconds(hms(M1834$X15K))
M1834$X20K <- lubridate::period_to_seconds(hms(M1834$X20))
M1834$X25K <- lubridate::period_to_seconds(hms(M1834$X25K))
M1834$X30K <- lubridate::period_to_seconds(hms(M1834$X30K))
M1834$X35K <- lubridate::period_to_seconds(hms(M1834$X35K))
M1834$X40K <- lubridate::period_to_seconds(hms(M1834$X40K))
M1834$Official.Time <- lubridate::period_to_seconds(hms(M1834$Official.Time))
M1834$Bib <- as.numeric(M1834$Bib)
#Filtering for our target: Man of 18-34 years
M1834 <- subset(M1834, M1834$M.F == "M" & M1834$Age >= 18 & M1834$Age <= 34 & M1834$Official.Time < 11100,)
#Delete some no relevant columns
M1834 <- subset(M1834, select = -c(State,Citizen,X.1,Half,Proj.Time))
summary(M1834)
#Remove the rows that have null values in any column
M1834 <- na.omit(M1834)
#Compute The parcial times of each segment
distance<-c("X5K","X10K","X15K","X20K","X25K","X30K","X35K","X40K","Official.Time")
for (k in distance) {
if (k != "X5K") {
colName <- paste(k,"Parcial", sep = "")
M1834[,colName] <- M1834[,k] - M1834[,temp]
#print(summary(M1834[,k]))
#print(sd(M1834[,k]))
}
else {
colName <- paste(k,"Parcial", sep = "-")
M1834[,colName] <- M1834[,k]
}
temp = k
}
#Pinting the summary and std of all columns in c
distance<-c("X5K","X10K","X15K","X20K","X25K","X30K","X35K","X40K","Official.Time")
for (k in distance) {
print(k)
print(summary(M1834[,k]))
print(sd(M1834[,k]))
}
#Calculant la p
d <- sort(M1834$Official.Time)
i <- round(nrow(M1834)*0.1)
print(d[i+2])
TABLEV2 = as.data.frame((with(M1834,table(Age))))
print(TABLEV2[,"Freq"]/nrow(M1834))
#Calculant la p acumulada
TABLEV2$cumsum <- cumsum(TABLEV2[,"Freq"]/nrow(M1834))
#Printant el resultat per fer copypaste a gpss
cumsums <- t(TABLEV2$cumsum)
for (k in order(cumsums)) {
cat(cumsums[k],k+17, sep = ",")
cat("/")
}
RegModel  <- lm(Official.Time ~ Official.Time.Parcial + X5K.Parcial + X10K.Parcial +
X15K.Parcial + X20K.Parcial + X25K.Parcial + X30K.Parcial + X35K.Parcial + X40K.Parcial, data = M1834)
######################################
#Importing the dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
M1834 <- read.csv("./marathon_results_2015.csv", header = TRUE, fill = TRUE, sep = ",", na.strings = "", dec = ".", strip.white = TRUE)
#Preprocessing
library(lubridate)
M1834$X5K <- lubridate::period_to_seconds(hms(M1834$X5K))
M1834$X10K <- lubridate::period_to_seconds(hms(M1834$X10K))
M1834$X15K <- lubridate::period_to_seconds(hms(M1834$X15K))
M1834$X20K <- lubridate::period_to_seconds(hms(M1834$X20))
M1834$X25K <- lubridate::period_to_seconds(hms(M1834$X25K))
M1834$X30K <- lubridate::period_to_seconds(hms(M1834$X30K))
M1834$X35K <- lubridate::period_to_seconds(hms(M1834$X35K))
M1834$X40K <- lubridate::period_to_seconds(hms(M1834$X40K))
M1834$Official.Time <- lubridate::period_to_seconds(hms(M1834$Official.Time))
M1834$Bib <- as.numeric(M1834$Bib)
#Filtering for our target: Man of 18-34 years
M1834 <- subset(M1834, M1834$M.F == "M" & M1834$Age >= 18 & M1834$Age <= 34 & M1834$Official.Time < 11100,)
#Delete some no relevant columns
M1834 <- subset(M1834, select = -c(State,Citizen,X.1,Half,Proj.Time))
summary(M1834)
#Remove the rows that have null values in any column
M1834 <- na.omit(M1834)
#Compute The parcial times of each segment
distance<-c("X5K","X10K","X15K","X20K","X25K","X30K","X35K","X40K","Official.Time")
for (k in distance) {
if (k != "X5K") {
colName <- paste(k,"Parcial", sep = "")
M1834[,colName] <- M1834[,k] - M1834[,temp]
#print(summary(M1834[,k]))
#print(sd(M1834[,k]))
}
else {
colName <- paste(k,"Parcial", sep = "")
M1834[,colName] <- M1834[,k]
}
temp = k
}
#Pinting the summary and std of all columns in c
distance<-c("X5K","X10K","X15K","X20K","X25K","X30K","X35K","X40K","Official.Time")
for (k in distance) {
print(k)
print(summary(M1834[,k]))
print(sd(M1834[,k]))
}
#Calculant la p
d <- sort(M1834$Official.Time)
i <- round(nrow(M1834)*0.1)
print(d[i+2])
TABLEV2 = as.data.frame((with(M1834,table(Age))))
print(TABLEV2[,"Freq"]/nrow(M1834))
#Calculant la p acumulada
TABLEV2$cumsum <- cumsum(TABLEV2[,"Freq"]/nrow(M1834))
#Printant el resultat per fer copypaste a gpss
cumsums <- t(TABLEV2$cumsum)
for (k in order(cumsums)) {
cat(cumsums[k],k+17, sep = ",")
cat("/")
}
hist(M1834$X5KParcial)
hist(M1834$X10KParcial)
library("lmtest")
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(residuals(AnovaModel.2))
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(residuals(M1834$X5KParcial))
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(residuals(M1834$X5KParcial))
View(M1834)
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(M1834$X5KParcial)
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(M1834)
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(M1834$X5KParcial)
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(M1834$X40KParcial)
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(M1834$Pace)
#The populations from which the samples are selected must be normal.
#Shapiro test
shapiro.test(M1834$Pace)
View(M1834)
View(M1834)
######################################
#Importing the dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
M1834 <- read.csv("./marathon_results_2015.csv", header = TRUE, fill = TRUE, sep = ",", na.strings = "", dec = ".", strip.white = TRUE)
#Preprocessing
library(lubridate)
M1834$X5K <- lubridate::period_to_seconds(hms(M1834$X5K))
M1834$X10K <- lubridate::period_to_seconds(hms(M1834$X10K))
M1834$X15K <- lubridate::period_to_seconds(hms(M1834$X15K))
M1834$X20K <- lubridate::period_to_seconds(hms(M1834$X20))
M1834$X25K <- lubridate::period_to_seconds(hms(M1834$X25K))
M1834$X30K <- lubridate::period_to_seconds(hms(M1834$X30K))
M1834$X35K <- lubridate::period_to_seconds(hms(M1834$X35K))
M1834$X40K <- lubridate::period_to_seconds(hms(M1834$X40K))
M1834$Official.Time <- lubridate::period_to_seconds(hms(M1834$Official.Time))
M1834$Bib <- as.numeric(M1834$Bib)
#Filtering for our target: Man of 18-34 years
M1834 <- subset(M1834, M1834$M.F == "M" & M1834$Age >= 18 & M1834$Age <= 34 & M1834$Official.Time < 11100,)
#Delete some no relevant columns
M1834 <- subset(M1834, select = -c(State,Citizen,X.1,Half,Proj.Time))
summary(M1834)
#Remove the rows that have null values in any column
M1834 <- na.omit(M1834)
#Compute The parcial times of each segment
distance<-c("X5K","X10K","X15K","X20K","X25K","X30K","X35K","X40K","Official.Time", "Pace")
for (k in distance) {
if (k != "X5K") {
colName <- paste(k,"Parcial", sep = "")
M1834[,colName] <- M1834[,k] - M1834[,temp]
#print(summary(M1834[,k]))
#print(sd(M1834[,k]))
}
else {
colName <- paste(k,"Parcial", sep = "")
M1834[,colName] <- M1834[,k]
}
temp = k
}
View(M1834)
M1834$Pace <- lubridate::period_to_seconds(hms(M1834$Pace))
detach("package:Rcmdr", unload = TRUE)
library(Rcmdr)
lm(X5KParcial ~ Age + Pace, M1834)
model = lm(X5KParcial ~ Age + Pace, M1834)
model[0]
model[0][1]
summary(model)$coefficients
model = lm(X5KParcial ~ Age + Pace, M1834)
model
summary(model)$coefficients
model
summary(model)$coefficients
summm[[1]][["F value"]]
summm = summary(model)$coefficients
summm[[1]][["F value"]]
summm[[1]][["t value"]]
summm = summary(model)$coefficients
summm = summary(model)$coefficients
summm = summary(model)
summm[[1]][["t value"]]
summm[[1]]
summm[[2]]
summary.lmlm(X5KParcial ~ Age + Pace, M1834)
summary.lm(X5KParcial ~ Age + Pace, M1834)
summary.lm(model)
a = summary.lm(model)
a
View(a)
View(model)
model$coefficients
model = lm(X5KParcial ~ Pace + Age, M1834)
model$coefficients
model = lm(X5KParcial ~ Age + Pace, M1834)
model$coefficients
l = model$coefficients
View(l)
lr = data.frame()
lr = data.frame(XK, AGE, PACE)
?data.frame
lr = data.frame("XK", "AGE", "PACE")
View(lr)
lr = data.frame()
df<-data.frame("hi","bye")
names(df)<-c("hello","goodbye")
lr<-data.frame()
model = lm(X5KParcial ~ Age + Pace, M1834)
lr <- rbind(lr, data.frame(model$coefficients))
View(lr)
data.frame(model$coefficients)
a = data.frame(model$coefficients)
View(a)
lr<-data.frame(ncol(3))
View(lr)
lr[i, ] <- model$coefficients
lr[1, ] <- model$coefficients
View(lr)
lr<-data.frame()
as.data.frame(model$coefficients)
a = as.data.frame(model$coefficients)
View(a)
for (i in order(5))
order(5)
order(5)
order(100)
for (i in order(1:5)) {
}
order(1:5)
model$coefficients
print(model$coefficients
print(model$coefficients)
print(model$coefficients)
print(model$coefficients)[1]
model$coefficients
lr <- rbind(lr, as.matrix(model$coefficients))
View(lr)
lr <- rbind(lr, (model$coefficients))
View(lr)
lr <- rbind(lr, model$coefficients)
View(lr)
lr<-matrix()
lr <- rbind(lr, model$coefficients)
lr<-matrix(ncols = 3)
?matrix
lr<-data.frame()
lr[1:3]
lr[1:3,]
lr<-data.frame()
lr[1:3,]
lr[1,2,3,]
lr[c(1,2,3),]
lr <- rbind(lr, model$coefficients)
lr[1:3,]
View(lr)
colnames(lr) <- c("1", "2", "3")
lr<-data.frame()
colnames(lr) <- c("1", "2", "3")
lr<-data.frame()
colnames(lr) <- c("1", "2", "3")
?data.frame
lr[1:3,]
lr[1:3,] <- model$coefficients
View(lr)
lr[1, ] <- model$coefficients
a = as.data.frame(model$coefficients)
a = data.frame(model$coefficients)
View(l)
lr[1, ] <- model$coefficients
lr[1:3,] <- model$coefficients
lr <- rbind(lr, model$coefficients)
colnames(lr) <- c('1','2','3')
View(lr)
distance<-c("X5K","X10K","X15K","X20K","X25K","X30K","X35K","X40K","Official.Time")
for (i in distance) {
model = lm(X5KParcial ~ Age + Pace, M1834)
lr <- rbind(lr, model$coefficients)
}
for (i in distance) {
model = lm(i ~ Age + Pace, M1834)
lr <- rbind(lr, model$coefficients)
}
for (i in distance) {
model = lm(i ~ Age + Pace, M1834)
lr <- rbind(lr, model$coefficients)
}
for (i in distance) {
model = lm(as.formula(i) ~ Age + Pace, M1834)
lr <- rbind(lr, model$coefficients)
}
distance<-c("X5KParcial","X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
model = lm(as.formula(i ~ Age + Pace, M1834))
lr <- rbind(lr, model$coefficients)
}
model = lm(as.formula(i ~ Age + Pace), M1834)
for (i in distance) {
model = lm(as.formula(i ~ Age + Pace), M1834)
lr <- rbind(lr, model$coefficients)
}
as.formula(i ~ Age + Pace)
as.formula(i ~ Age + Pace)
for (i in distance) {
model = lm(as.formula(i ~ Age + Pace), M1834)
as.formula(i ~ Age + Pace)
lr <- rbind(lr, model$coefficients)
}
for (i in distance) {
as.formula(i ~ Age + Pace)
model = lm(as.formula(i ~ Age + Pace), M1834)
lr <- rbind(lr, model$coefficients)
}
for (i in distance) {
print(as.formula(i ~ Age + Pace))
model = lm(as.formula(i ~ Age + Pace), M1834)
lr <- rbind(lr, model$coefficients)
}
as.formula("5ka")
as.formula("5ka")
as.formula("5k")
as.formula("X5k")
as.formula("X5k", M1834)
as.formula("X5K", M1834)
a = cat(i, +, "Age", "Pace" )
a = cat(i, +, "Age", "Pace" )
a = cat(i, "+", "Age", "Pace")
a = cat(i, "+", "Age", "Pace")
a <- cat(i, "+", "Age", "Pace")
a <- cat(i, "+", "Age", "Pace")
a <- paste(i, "+", "Age", "Pace")
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(as.formula(f), M1834)
lr <- rbind(lr, model$coefficients)
}
model = lm(as.formula(f), M1834)
View(M1834)
distance<-c("X5KParcial","X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(as.formula(f), M1834)
lr <- rbind(lr, model$coefficients)
}
distance<-c("X5kParcial","X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(as.formula(f), M1834)
lr <- rbind(lr, model$coefficients)
}
as.formula(f)
as.formula(f)
model = lm(as.formula(f, M1834), M1834)
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(as.formula(f, M1834), M1834)
lr <- rbind(lr, model$coefficients)
}
distance<-c("X5KParcial","X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(as.formula(f, M1834), M1834)
lr <- rbind(lr, model$coefficients)
}
eval(f)
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(eval(f, M1834), M1834)
lr <- rbind(lr, model$coefficients)
}
distance<-c("X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
print(as.formula(i ~ Age + Pace))
f <- paste(i, "+ Age + Pace")
model = lm(eval(f, M1834), M1834)
lr <- rbind(lr, model$coefficients)
}
model = lm(eval(f), M1834)
eval(f, M1834)
eval(f)
model = lm(eval(f), M1834)
formula(f)
formula(f)
eval(f)
formula(f)
formula(f)
formula(f, M1834)
formula(EVAL(f), M1834)
formula(eval(f), M1834)
for (i in distance) {
f <- paste(i, "+ Age + Pace")
formula(f)
model = lm(eval(f), M1834)
lr <- rbind(lr, model$coefficients)
}
for (i in distance) {
f <- paste(i, "+ Age + Pace")
model = lm(eval(f), M1834)
lr <- rbind(lr, model$coefficients)
}
distance<-c("X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
f <- paste(i, "+ Age + Pace")
model = lm(eval(f), M1834)
lr <- rbind(lr, model$coefficients)
}
model = lm(eval(f, M1834), M1834)
for (i in distance) {
f <- paste(i, "+ Age + Pace")
model = lm(eval(f, M1834), M1834)
lr <- rbind(lr, model$coefficients)
}
eval(f)
as.formula(eval(f))
f <- paste(i, "~ Age + Pace")
model = as.formula(f, M1834)
model = lm(as.formula(f), M1834)
for (i in distance) {
f <- paste(i, "~ Age + Pace")
model = lm(as.formula(f), M1834)
lr <- rbind(lr, model$coefficients)
}
distance<-c("X5KParcial", "X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
f <- paste(i, "~ Age + Pace")
model = lm(as.formula(f), M1834)
lr <- rbind(lr, model$coefficients)
}
colnames(lr) <- c('1','2','3')
View(lr)
lr<-data.frame()
distance<-c("X5KParcial", "X10KParcial","X15KParcial","X20KParcial","X25KParcial","X30KParcial","X35KParcial","X40KParcial")
for (i in distance) {
f <- paste(i, "~ Age + Pace")
model = lm(as.formula(f), M1834)
lr <- rbind(lr, model$coefficients)
}
colnames(lr) <- c('1','2','3')
View(lr)
print(lr)
